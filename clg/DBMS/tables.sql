

CREATE TABLE MOVIE (
    MVNO INT(2) PRIMARY KEY NOT NULL ,
    TITLE VARCHAR(25),
    TYPE VARCHAR(10),
    STAR VARCHAR(25),
    PRICE DECIMAL(8, 2)
);

-- INSERT VALUES INTO MOVIE
INSERT INTO MOVIE VALUES 
(1, 'BLOODY VENGEANCE', 'ACTION', 'JACKIE CHAN', 100.00),
(2, 'THE FIRM', 'THRILLER', 'TOM CRUISE', 200.00),
(3, 'PRETTY WOMAN', 'ROMANCE', 'RICHARD GERE', 150.00),
(4, 'HOME ALONE', 'COMEDY', 'MACAULAY CULKIN', 150.55),
(5, 'THE FUGITIVE', 'THRILLER', 'HARRISON FORD', 200.00),
(6, 'COMA', 'SUSPENSE', 'MICHAEL DOUGLAS', 100.00),
(7, 'DRACULA', 'HORROR', 'GARY OLDMAN', 150.25),
(8, 'QUICK CHANGE', 'COMEDY', 'BILL MURRAY', 100.00),
(9, 'GONE WITH THE WIND', 'DRAMA', 'CLARKE GABLE', 200.00),
(10, 'CARRY ON DOCTOR', 'COMEDY', 'LESLIE PHILLIPS' ,100.00);
-- CREATE INVO TABLE
CREATE TABLE INVO (
    INVNO VARCHAR(3) PRIMARY KEY NOT NULL,
    MVNO INT,
    CUSTID VARCHAR(3),
	ISSUEDATE DATE,
    RETDATE DATE,
    FOREIGN KEY (MVNO) REFERENCES MOVIE(MVNO),
    FOREIGN KEY (CUSTID) REFERENCES CUST(CUSTID)
);

-- INSERT VALUES INTO INVO
INSERT INTO INVO (INVNO, MVNO, CUSTID, ISSUEDATE, RETDATE) VALUES
('I01', 4, 'A01', '1993-07-23', '1993-07-25'),
('I02', 3, 'A02', '1993-08-12', '1993-08-15'),
('I03', 1, 'A02', '1993-08-15', '1993-08-18'),
('I04', 6, 'A03', '1993-09-10', '1993-09-13'),
('I05', 7, 'A04', '1993-08-05', '1993-08-08'),
('I06', 2, 'A06', '1993-09-18', '1993-09-20'),
('I07', 9, 'A05', '1993-07-07', '1993-07-10'),
('I08', 9, 'A01', '1993-08-11', '1993-08-14'),
('I09', 5, 'A03', '1993-07-06', '1993-07-09'),
('I10', 8, 'A06', '1993-09-03', '1993-09-06');

-- HAVING, GROUPBY AND TABLE UPDATION
-- 1. COUNT THE TOTAL NUMBER OF CUSTOMERS.
SELECT COUNT(*) AS TOTAL_CUSTOMERS 
FROM CUST;

-- 2. CALCULATE THE TOTAL PRICE OF ALL THE MOVIES.
SELECT SUM(PRICE) AS TOTAL_PRICE 
FROM MOVIE;

-- 3. CALCULATE THE AVERAGE PRICE OF ALL THE MOVIES.
SELECT AVG(PRICE) AS AVERAGE_PRICE 
FROM MOVIE;

-- 4. DETERMINE THE MAXIMUM AND MINIMUM OF PRICES, RENAMING THE TITLE AS MAX_PRICE AND MIN_PRICE RESPECTIVELY.
SELECT 
	MAX(PRICE) AS MAX_PRICE, 
    MIN(PRICE) AS MIN_PRICE 
FROM MOVIE;

-- 5. COUNT THE NUMBER OF MOVIES HAVING PRICE GREATER THAN OR EQUAL TO 150.
SELECT COUNT(*) AS MOVIES_COUNT 
FROM MOVIE 
WHERE PRICE >= 150;

-- 6. PRINT THE INFORMATION OF THE INVOICE TABLE IN THE SPECIFIED FORMAT FOR ALL RECORDS.
SELECT 
    CONCAT("A} THE INVOICE NO. OF CUSTOMER ID. " , CUSTID ," IS " ,INVNO ," AND MOVIE NO. IS " ,MVNO , ".") AS INFO_A,
    CONCAT("B} " , CUSTID ," HAS TAKEN MOVIE NO. " ,MVNO ," ON " ,ISSUEDATE ," AND WILL RETURN ON " ,RETDATE ,".") AS INFO_B
FROM INVO;

-- 7. PRINT THE TYPE AND AVERAGE PRICE OF EACH MOVIE.
SELECT TYPE, AVG(PRICE) AS AVERAGE_PRICE FROM MOVIE GROUP BY TYPE;

-- 8. FIND THE NUMBER OF MOVIES IN EACH TYPE.
SELECT 
	TYPE, 
    COUNT(*) AS MOVIE_COUNT 
FROM MOVIE 
GROUP BY TYPE;

-- 9. COUNT SEPARATELY THE NUMBER OF MOVIES IN THE 'COMEDY' AND 'THRILLER' TYPE.
SELECT 
	TYPE, 
    COUNT(*) AS MOVIE_COUNT 
FROM MOVIE 
WHERE TYPE IN ('COMEDY', 'THRILLER') 
GROUP BY TYPE;

-- 10. CALCULATE THE AVERAGE PRICE FOR EACH TYPE THAT HAS A MAXIMUM PRICE OF 150.
SELECT 
	TYPE, 
    AVG(PRICE) AS AVERAGE_PRICE 
FROM MOVIE 
WHERE PRICE <= 150 
GROUP BY TYPE;

-- 11. CALCULATE THE AVERAGE PRICE OF ALL MOVIES WHERE THE TYPE IS 'COMEDY' OR 'THRILLER' AND THE PRICE IS GREATER THAN OR EQUAL TO 50.
SELECT AVG(PRICE) AS AVERAGE_PRICE 
FROM MOVIE 
WHERE 
	TYPE IN ('COMEDY', 'THRILLER') AND 
    PRICE >= 50;

-- 12. CHANGE THE TELEPHONE NUMBER OF PRAMADA TO 466389.
UPDATE CUST 
SET PHONENO = 466389 
WHERE FNAME = 'PRAMADA';

-- 13. CHANGE THE ISSUEDATE OF CUSTID 'A01' TO 24/07/93.
UPDATE INVO 
SET ISSUEDATE = '1993-07-24' 
WHERE CUSTID = 'A01';

-- 14. CHANGE THE PRICE OF 'GONE WITH THE WIND' TO RS. 250.00.
UPDATE MOVIE 
SET PRICE = 250.00 
WHERE TITLE = 'GONE WITH THE WIND';

-- 15. DELETE THE RECORD WITH INVOICE NUMBER 'I05' FROM THE INVOICE TABLE.
DELETE FROM INVO 
WHERE INVNO = 'I05';

-- 16. DELETE ALL RECORDS HAVING A RETURN DATE BEFORE 10TH JULY '93.
DELETE FROM INVO 
WHERE RETDATE < '1993-07-10';

-- 17. CHANGE THE AREA OF CUSTID 'A05' TO ‘VS’.
UPDATE CUST 
SET AREA = 'VS' 
WHERE CUSTID = 'A05';

-- SINGLE VALUES FUNCTIONS 

#REFERENCE
SELECT * FROM CUST;
SELECT * FROM MOVIE;
SELECT * FROM INVO;
